// Generated by CoffeeScript 1.8.0
Ext.define('Corefw.store.TextLookup', {
  extend: 'Ext.data.Store',
  fields: ['text'],
  queryKeyName: 'pathString',
  queryValueName: 'operand',
  proxy: {
    type: 'rest',
    url: 'api/pivot/lookup',
    actionMethods: {
      read: 'POST'
    },
    reader: {
      type: 'json'
    }
  },
  getTypesRegex: function(types) {
    if (types && types.length) {
      return new RegExp("(" + types.join(")|(") + ")", "i");
    } else {
      return false;
    }
  },
  findByTypes: function(types) {
    return this.find('text', this.getTypesRegex(types));
  },
  filterData: function(types) {
    var regex;
    regex = this.getTypesRegex(types);
    if (regex) {
      return this.filterBy(function(item) {
        return regex.test(item.get("text"));
      });
    } else {
      return this.filterBy(function(item) {
        return false;
      });
    }
  },
  listeners: {
    beforeload: function(me, operation, eOpts) {
      var _ref;
      operation.params = operation.params || {};
      operation.params[this.queryKeyName] = this[this.queryKeyName];
      operation.params[this.queryValueName] = ((_ref = operation.params) != null ? _ref.query : void 0) ? operation.params.query : this[this.queryValueName];
    }
  }
});
