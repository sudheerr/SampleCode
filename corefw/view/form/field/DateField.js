// Generated by CoffeeScript 1.8.0
Ext.define('Corefw.view.form.field.DateField', {
  extend: 'Ext.form.field.Date',
  mixins: ['Corefw.mixin.CoreField'],
  xtype: 'coredatefield',
  showToday: false,
  labelSeparator: '',
  format: 'd M Y',
  generatePostData: function() {
    var fieldObj, val, _ref;
    val = (_ref = this.getValue()) != null ? _ref.getTime() : void 0;
    fieldObj = {
      name: this.name,
      value: val !== void 0 && val !== null ? val : ''
    };
    return fieldObj;
  },
  setValue: function(value) {
    var newDateString, nowTimeString;
    if (Ext.isNumber(value)) {
      value = new Date(value);
    }
    nowTimeString = Ext.Date.format(new Date(), 'H:i:s');
    newDateString = Ext.Date.format(value, 'd M Y');
    arguments[0] = Ext.Date.parse(newDateString + ' ' + nowTimeString, 'd M Y H:i:s');
    return this.callParent(arguments);
  },
  initComponent: function() {
    var fieldProps;
    if (this.cache) {
      fieldProps = this.cache._myProperties;
    } else if (this.column.cache) {
      fieldProps = this.column.cache._myProperties;
    }
    this.applyConfig(fieldProps);
    return this.callParent(arguments);
  },
  applyConfig: function(fieldProps) {
    var config, maxDate, minDate;
    if (fieldProps == null) {
      fieldProps = {};
    }
    minDate = fieldProps.minDate;
    maxDate = fieldProps.maxDate;
    config = {
      minValue: minDate !== '' && minDate !== void 0 ? new Date(minDate) : null,
      maxValue: maxDate !== '' && maxDate !== void 0 ? new Date(maxDate) : null
    };
    if (!Ext.isEmpty(fieldProps.format)) {
      config.format = fieldProps.format;
    }
    return Ext.merge(this, config);
  }
});
