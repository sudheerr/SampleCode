// Generated by CoffeeScript 1.8.0
Ext.define('Corefw.view.layout.Layout', {
  singleton: true,
  layoutClassByType: {
    table: 'Corefw.view.layout.AbsoluteLayoutManager',
    vbox: 'Corefw.view.layout.BoxLayoutManager',
    hbox: 'Corefw.view.layout.BoxLayoutManager',
    accordion: 'Corefw.view.layout.AccordionLayoutManager',
    tab: 'Corefw.view.layout.TabLayoutManager',
    navigator: 'Corefw.view.layout.NavigatorLayoutManager'
  },
  genLayoutType: function(widgetType) {
    if (/^(FORM_BASED_ELEMENT|FIELDSET|BAR_ELEMENT)$/.test(widgetType)) {
      return "table";
    } else if (widgetType === 'VIEW' || widgetType === 'COMPOSITE_ELEMENT') {
      return "vbox";
    }
  },
  create: function(comp, props) {
    var layoutClass, layoutType, widgetType, _ref, _ref1, _ref2;
    props = props || ((_ref = comp.cache) != null ? _ref._myProperties : void 0) || {};
    layoutType = props != null ? (_ref1 = props.layout) != null ? (_ref2 = _ref1.type) != null ? _ref2.toLowerCase() : void 0 : void 0 : void 0;
    widgetType = props.widgetType;
    if (!layoutType) {
      return;
    }
    if (layoutType === 'default') {
      layoutType = this.genLayoutType(widgetType);
    }
    layoutClass = this.layoutClassByType[layoutType];
    if (!layoutClass) {
      console.error("Can't find layoutManager for layout type", layoutType);
      return;
    }
    if (layoutType === 'table') {
      props.isAbsoluteLayout = true;
    } else if (layoutType === 'vbox') {
      props.isStackedLayout = true;
    }
    return Ext.create(layoutClass, {
      comp: comp,
      type: layoutType
    });
  }
});
