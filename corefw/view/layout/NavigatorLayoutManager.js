// Generated by CoffeeScript 1.8.0
Ext.define('Corefw.view.layout.NavigatorLayoutManager', {
  extend: 'Corefw.view.layout.LayoutManager',
  constructor: function(config) {
    var addtionalListener, comp, defaultColumns, meLayout;
    this.callParent(arguments);
    this.defaultCfg = {
      defaultColumns: 2,
      layoutAsVboxItemsQty: 2
    };
    defaultColumns = this.defaultCfg.defaultColumns;
    comp = config.comp;
    comp.layout = {
      type: 'table',
      columns: defaultColumns,
      tdAttrs: {
        style: "width:" + (100 / defaultColumns) + "%;vertical-align:top;"
      }
    };
    meLayout = this;
    addtionalListener = {
      boxready: function(me) {
        me.setAutoScroll(true);
        me.setBodyStyle({
          "overflowX": "hidden",
          "overflowY": "auto"
        });
      },
      resize: function(me, width, height, oldWidth, oldHeight) {
        meLayout.ajustItmesSize();
      }
    };
    comp.on(addtionalListener);
  },
  initLayout: function() {
    var comp, contentDefs;
    comp = this.comp;
    contentDefs = comp.contentDefs;
    comp.add(contentDefs);
  },
  removeAll: function() {
    var comp;
    comp = this.comp;
    comp.removeAll();
  },
  ajustItmesSize: function() {
    var cmp, item, unitWidth, _i, _len, _ref;
    cmp = this.comp;
    unitWidth = cmp.getWidth() / this.defaultCfg.defaultColumns;
    Ext.suspendLayouts();
    _ref = cmp.items.items;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      item.setWidth(unitWidth * (item.colspan || 1));
    }
    Ext.resumeLayouts(true);
  },
  add: function(contentDef, index) {
    var additionCfg, cmp, defaultColumns, item, itemsNum, needColspan, _i, _len, _ref;
    defaultColumns = this.defaultCfg.defaultColumns;
    cmp = this.comp;
    itemsNum = cmp.items.getCount();
    if (itemsNum >= this.defaultCfg.layoutAsVboxItemsQty) {
      needColspan = (itemsNum + 1) % defaultColumns;
      _ref = cmp.items.items;
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        item = _ref[index];
        item.colspan = 1;
      }
    } else {
      needColspan = 1;
    }
    additionCfg = {
      colspan: defaultColumns - needColspan + 1
    };
    Ext.apply(contentDef, additionCfg);
    cmp.add(contentDef);
    this.ajustItmesSize();
  }
});
