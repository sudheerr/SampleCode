// Generated by CoffeeScript 1.8.0
Ext.define('Corefw.view.tree.RadioView', {
  extend: 'Ext.tree.View',
  xtype: 'treeradioview',
  checkboxSelector: '.' + Ext.baseCSSPrefix + 'tree-radioselect',
  initComponent: function() {
    this.getPreviousSelection(false);
    this.callParent(arguments);
  },
  onCheckChange: function(record) {
    var currChecked, isBoolean, leaf;
    if (record.raw.disabled) {
      return;
    }
    currChecked = record.get('checked');
    isBoolean = Ext.isBoolean(currChecked);
    if (!isBoolean || currChecked === true) {
      return;
    }
    leaf = record.get('leaf');
    if (!leaf) {
      return;
    }
    this.callParent(arguments);
    if (this.prevCheckedRecord) {
      this.prevCheckedRecord.set('checked', false);
      this.fireEvent('checkchange', record, record.get('checked'));
    }
    this.prevCheckedRecord = record;
  },
  getPreviousSelection: function(clearRecordsFlag) {
    var record, store, _ref;
    store = this.store;
    record = store != null ? (_ref = store.tree) != null ? _ref.root : void 0 : void 0;
    this.getPreviousSelection_worker(record, clearRecordsFlag);
  },
  getPreviousSelection_worker: function(record, clearRecordsFlag) {
    var node, _i, _len, _ref;
    if (!record) {
      return;
    }
    if (!record.isLeaf()) {
      _ref = record.childNodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        node = _ref[_i];
        this.getPreviousSelection_worker(node);
      }
    }
    if (record.get('checked')) {
      if (this.prevCheckedRecord) {
        record.set('checked', false);
      } else {
        this.prevCheckedRecord = record;
      }
      if (clearRecordsFlag) {
        record.set('checked', false);
      }
    }
  }
});
