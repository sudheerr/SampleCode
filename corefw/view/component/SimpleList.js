// Generated by CoffeeScript 1.8.0
Ext.define('Corefw.view.component.SimpleList', {
  extend: 'Ext.panel.Panel',
  alias: 'widget.simpleList',
  autoScroll: true,
  layout: 'vbox',
  componentCls: 'simpleList',
  initSize: null,
  maxSize: null,
  itemHeight: 34,
  initComponent: function() {
    this.callParent(arguments);
    if (this.initSize !== null) {
      return this.height = this.itemHeight * this.initSize;
    }
  },
  removeAll: function() {
    this.callParent(arguments);
    if (this.initSize !== null) {
      return this.setHeight(this.initSize * this.itemHeight);
    }
  },
  getSize: function() {
    return this.query('field').length;
  },
  addItem: function(value) {
    var item, itemCnt;
    itemCnt = this.getSize();
    if (this.maxSize !== null && itemCnt < this.maxSize) {
      this.setHeight(this.itemHeight * (itemCnt + 1));
    }
    item = {
      xtype: 'toolbar',
      width: '100%',
      padding: '2 0 2 0',
      layout: 'hbox',
      items: [
        {
          xtype: 'button',
          text: '',
          cls: 'deleteIcon',
          width: 28,
          listeners: {
            click: function() {
              this.up('panel').remove(this.up('toolbar').id);
            }
          }
        }, {
          xtype: 'field',
          value: value,
          flex: 1
        }
      ]
    };
    return this.add(item);
  },
  removeLast: function() {
    var cnt;
    cnt = this.getSize();
    if (cnt) {
      return this.remove(this.query('toolbar')[cnt - 1]);
    }
  },
  find: function(value) {
    this.query('field').forEach(function(field, i) {
      if (field.getValue() === value) {
        return i;
      }
    });
    return -1;
  },
  getItems: function() {
    return this.query('field').map(function(field) {
      return field.getValue();
    });
  }
});
