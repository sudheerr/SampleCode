// Generated by CoffeeScript 1.8.0
Ext.define('Corefw.data.writer.Json', {
  extend: 'Ext.data.writer.Json',
  alias: 'writer.deepJson',
  writeRecords: function(request, data) {
    request = this.callParent(arguments);
    if (this.extraJsonData) {
      Ext.apply(request.jsonData, this.extraJsonData);
    }
    return request;
  },
  getRecordData: function(record) {
    var association, childStore, data, i, me;
    me = this;
    data = record.data;
    i = 0;
    while (i < record.associations.length) {
      association = record.associations.get(i);
      data[association.name] = null;
      childStore = record[association.storeName];
      childStore.each(function(childRecord) {
        var childData;
        if (!data[association.name]) {
          data[association.name] = [];
        }
        childData = this.getRecordData.call(this, childRecord);

        /*
        				 * If the child was marked dirty or phantom it must be added. If there was data returned that was neither
        				 * dirty or phantom, this means that the depth first recursion has detected that it has a child which is
        				 * either dirty or phantom. For this child to be put into the prepared data, it's parents must be in place whether
        				 * they were modified or not.
         */
        if (childRecord.dirty || childRecord.phantom || childData !== null) {
          data[association.name].push(childData);
          record.setDirty();
        }
      }, me);

      /*
      			 * Iterate over all the removed records and add them to the preparedData. Set a flag on them to show that
      			 * they are to be deleted
       */
      i++;
    }
    return data;
  }
});
